// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  createdAt DateTime @default(now())
  password  String
  tasks     Task[]
  boards    Board[]
  Tabel     Tabel[]
}

model Board {
  id          String   @id @default(uuid())
  title       String   @unique
  description String
  createdAt   DateTime @default(now())
  tasks       Task[]
  tabels      Tabel[]
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model Task {
  id          String    @id @default(uuid())
  title       String    @unique
  description String?
  createdAt   DateTime  @default(now())
  status      String
  subTasks    SubTask[]
  Board       Board?    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId     String?
  User        User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String?
  Tabel       Tabel?    @relation(fields: [tabelId], references: [id], onDelete: Cascade)
  tabelId     String?
}

model SubTask {
  id      String  @id @default(uuid())
  title   String
  checked Boolean
  Task    Task?   @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId  String?
}

model Tabel {
  id      String  @id @default(uuid())
  name    String
  tasks   Task[]
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String
  Board   Board?  @relation(fields: [boardId], references: [id])
  boardId String?
}
